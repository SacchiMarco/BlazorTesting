@page "/item"

<div class="card border-secondary" style="max-width: 18rem">
    <h5 class="card-header text-center">Titel</h5>
    <div class="card-body">
        <img class="card-img" src="https://via.placeholder.com/120" />
        <div class="card-text text-center m-2"> cardText</div>
    </div>
    <div class="card-my-block">
        <div class="row">
            <div class="col-6 text-center d-flex align-items-center font-sice-800">
                Preis pro "Einheit"
            </div>
            <div class="col-6 text-right font-weight-bold">
                XX.XX Fr.
            </div>
        </div>
    </div>
    <div class="card-footer">
        <div class=" row">
            <div class="col-6 text-center">
                <button class="btn btn-primary btn-sm">In den <i class="fas fa-cart-plus"></i></button>
            </div>
            <div class="col-6 flex-column-reverse">

                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text btn-noshadow btn-sm order-count-btn @DisabledDown" @onclick="CountDown">
                            <span class="oi oi-minus icon"></span>
                        </div>
                    </div>
                    <input class="form-control-plaintext form-control-sm text-center font-sice-800 noshadow input-shopitemcounter" type="number"
                           @bind-value="UpdateCounter"
                           @bind-value:event="oninput" />
                    <div class="input-group-append">
                        <div class="input-group-text btn-noshadow btn-sm order-count-btn @DisabledUp" @onclick="CountUp">
                            <span class="oi oi-plus icon"></span>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@code {

    public int Counter = 1;
    public string DisabledDown { get; set; } = "btn-my-hover";
    public string DisabledUp { get; set; } = "btn-my-hover";

    public int UpdateCounter
    {
        get => Counter;
        set
        {
            if (value >= 100)
            {
                Counter = 99;
                DisabledUp = "disabled";
            }
            else if (value <= 0)
            {
                Counter = 1;
                DisabledDown = "disabled";
            }
            else
            {
                Counter = value;
            }
        }
    }

    public async Task CountUp()
    {
        var orderSize = Counter;
        orderSize++;
        await CheckOrderSize(orderSize);
    }

    public async Task CountDown()
    {
        var orderSize = Counter;
        orderSize--;
        await CheckOrderSize(orderSize);
    }

    public async Task CheckOrderSize(int orderSize)
    {
        await Task.Run(() =>
        {
            if (orderSize <= 0)
            {
                Counter = 1;
                DisabledDown = "disabled";
            }
            else if (orderSize >= 100)
            {
                Counter = 99;
                DisabledUp = "disabled";
            }
            else
            {
                Counter = orderSize;
                DisabledUp = "btn-my-hover";
                DisabledDown = "btn-my-hover";
            }

        });

        StateHasChanged();
    }

}
